{"version":3,"sources":["../../webpack/bootstrap","common/_DATA.js","common/constants/config.js","components/LineChart.js","App.js","reducers/index.js","store.js","history.js","serviceWorker.js","index.js","MainApp.js","common/constants/index.js","common/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","getFields","label","colorOne","colorTwo","colorThere","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","pointHoverBorderColor","pointBackgroundColor","backgroundColor","concat","borderColor","pointBorderColor","pointHoverBackgroundColor","getLineData","labels","expectedData","currentData","datasets","_Users_tayyab_Projects_Pycharm_Projects_personal_react_django_main_burn_down_chart_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","getFieldsListWithLabels","startDate","endDate","loopStartDate","Date","fields","getDay","toDateString","setTime","getTime","__webpack_exports__","API_URL","process","LineChart","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","onDateChange","setState","setFieldsWithLabels","_this$state","state","_getFieldsListWithLab","onChange","onShowChart","getExpectedResult","showChart","onFieldValueChange","index","toConsumableArray","_this$state2","totalWeight","fieldsLength","perDayWork","parseInt","totalWork","newFields","forEach","expectedResult","renderFields","map","field","react_default","a","createElement","Grid","item","TextField","type","margin","variant","e","target","_getFieldsListWithLab2","_this2","_this$state3","className","container","spacing","xs","react_datepicker_min_default","selected","date","selectsStart","selectsEnd","minDate","Button","onClick","es","Component","App","LineChart_LineChart","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","logger","createBrowserHistory","Boolean","location","hostname","match","ReactDOM","render","react_redux_es","react_router","history","browserHistory","path","component","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister","_actionTypes__WEBPACK_IMPORTED_MODULE_0__","_apiUrls__WEBPACK_IMPORTED_MODULE_1__","_misc__WEBPACK_IMPORTED_MODULE_2__","_routes__WEBPACK_IMPORTED_MODULE_3__","_config__WEBPACK_IMPORTED_MODULE_4__","_DATA__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.bda97995.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([153,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const getFields = (label, data, colorOne, colorTwo, colorThere) => ({\n    label,\n    fill: true,\n    lineTension: 0.1,\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointBackgroundColor: '#fff',\n    backgroundColor: `rgba(${colorOne}, ${colorTwo}, ${colorThere}, 0.4)`,\n    borderColor: `rgba(${colorOne}, ${colorTwo}, ${colorThere}, 1)`,\n    pointBorderColor: `rgba(${colorOne}, ${colorTwo}, ${colorThere}, 1)`,\n    pointHoverBackgroundColor: `rgba(${colorOne}, ${colorTwo}, ${colorThere}, 1)`,\n    data\n});\n\nexport const getLineData = (labels, expectedData, currentData) => ({\n    labels: labels,\n    datasets: [\n        {\n            ...getFields('Expected', expectedData, 75, 192, 192)\n        },\n        {\n            ...getFields('Current', currentData, 175, 192, 192)\n        }\n    ]\n});\n\nexport const getFieldsListWithLabels = (startDate, endDate) => {\n    let loopStartDate = new Date(startDate);\n    const labels = [];\n    const fields = [];\n    while (loopStartDate <= endDate) {\n        if (loopStartDate.getDay() === 6 || loopStartDate.getDay() === 0) {\n            loopStartDate = new Date(loopStartDate.setTime( loopStartDate.getTime() + 86400000 ));\n            continue;\n        }\n        labels.push(loopStartDate.toDateString());\n        fields.push(0);\n        loopStartDate = new Date(loopStartDate.setTime( loopStartDate.getTime() + 86400000 ));\n    }\n    return {fields, labels};\n};\n","/* global process */\nexport const API_URL = process.env.REACT_APP_API_URL;","import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { TextField, Button, Grid } from '@material-ui/core';\nimport DatePicker from 'react-datepicker';\nimport { getLineData, getFieldsListWithLabels } from '../common';\n\nexport default class LineChart extends Component {\n\n    constructor(props) {\n        super(props);\n\n        const { fields, labels } = getFieldsListWithLabels(new Date(), new Date());\n\n        this.state = {\n            startDate: new Date(),\n            endDate: new Date(),\n            expectedResult: [],\n            showChart: false,\n            totalWeight: 0,\n            perDayWork: 0,\n            fields,\n            labels\n        };\n    }\n\n    onDateChange = (property, value) => {\n        debugger;\n        this.setState({ [property]: value }, this.setFieldsWithLabels);\n    };\n\n    setFieldsWithLabels = () => {\n        const { startDate, endDate } = this.state;\n        const { fields, labels } = getFieldsListWithLabels(startDate, endDate);\n        this.setState({ fields, labels });\n    };\n\n    onChange = (property, value) => this.setState({ [property]: value });\n\n    onShowChart = () => {\n        this.getExpectedResult();\n        this.setState({ showChart: true });\n    };\n\n    onFieldValueChange = (index, value) => {\n        const { fields } = this.state;\n        fields[index] = value;\n        this.setState({ fields: [...fields] });\n    };\n\n    getExpectedResult = () => {\n        const { fields, totalWeight } = this.state;\n        const fieldsLength = fields.length - 1;\n        const perDayWork = parseInt(totalWeight / fieldsLength) + 1;\n        let totalWork = parseInt(totalWeight);\n        const newFields = [];\n        fields.forEach(() => {\n            newFields.push(totalWork);\n            if (totalWork <= perDayWork) {\n                totalWork = 0;\n            } else {\n                totalWork -= perDayWork;\n            }\n        });\n        this.setState({ perDayWork, expectedResult: newFields });\n    };\n\n    renderFields = () => this.state.fields.map((field, index) => (\n        <Grid item key={index}>\n            <TextField\n                type=\"number\"\n                value={field}\n                label={this.state.labels[index]}\n                margin=\"normal\"\n                variant=\"outlined\"\n                onChange={e => this.onFieldValueChange(index, e.target.value)}\n            />\n        </Grid>\n    ));\n\n    render() {\n\n        const { startDate, endDate, fields, showChart, totalWeight, labels, expectedResult } = this.state;\n\n        return (\n            <div className=\"page\">\n                <Grid container spacing={16}>\n                    <Grid item xs={6}>\n                        <Grid container spacing={16}>\n                            <Grid item xs={4}>\n                                <div className=\"custom-datepicker\">\n                                    <DatePicker\n                                        selected={startDate}\n                                        onChange={date => this.onDateChange('startDate', date)}\n                                        selectsStart\n                                        startDate={startDate}\n                                        endDate={endDate}\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <div className=\"custom-datepicker\">\n                                    <DatePicker\n                                        selected={endDate}\n                                        onChange={date => this.onDateChange('endDate', date)}\n                                        selectsEnd\n                                        endDate={endDate}\n                                        minDate={startDate}\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <TextField\n                                    type=\"number\"\n                                    value={totalWeight}\n                                    label=\"Total Weight\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    onChange={e => this.onChange('totalWeight', e.target.value)}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <br/>\n                <Grid container spacing={1}>\n                    {this.renderFields()}\n                </Grid>\n                <Button variant=\"outlined\" onClick={this.onShowChart}>Show Chart</Button>\n                {showChart && <Line data={getLineData(labels, expectedResult, fields)}/>}\n            </div>\n        );\n    }\n};","import React from 'react';\nimport { LineChart } from './components';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <LineChart/>\n        </div>\n    );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nexport default combineReducers({});\n","import {applyMiddleware, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger'\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\n\nexport default store;","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './index.css';\nimport './App.css';\nimport App from './MainApp';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App/>, document.querySelector('.root-container'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { Route, Router, Switch } from 'react-router-dom';\nimport store from './store';\nimport browserHistory from './history';\n\nexport default () => (\n    <Provider store={store}>\n        <Router history={browserHistory}>\n            <Switch>\n                <Route path=\"/\" component={App}/>\n            </Switch>\n        </Router>\n    </Provider>\n);","export * from './actionTypes';\nexport * from './apiUrls';\nexport * from './misc';\nexport * from './routes';\nexport * from './config';\n","export * from './_DATA';\nexport * from './constants';\nexport * from './utils';\n"],"sourceRoot":""}